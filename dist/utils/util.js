'use strict';

function formatTime(date) {
  var year = date.getFullYear();
  var month = date.getMonth() + 1;
  var day = date.getDate();

  var hour = date.getHours();
  var minute = date.getMinutes();
  var second = date.getSeconds();

  return [year, month, day].map(formatNumber).join('/') + ' ' + [hour, minute, second].map(formatNumber).join(':');
}

function formatNumber(n) {
  n = n.toString();
  return n[1] ? n : '0' + n;
}

function getDateDiff(dateTimeStamp) {
  var result;
  var minute = 1000 * 60;
  var hour = minute * 60;
  var day = hour * 24;
  var halfamonth = day * 15;
  var month = day * 30;
  var now = new Date().getTime();
  var diffValue = now - dateTimeStamp;
  if (diffValue < 0) {
    return;
  }
  var monthC = diffValue / month;
  var weekC = diffValue / (7 * day);
  var dayC = diffValue / day;
  var hourC = diffValue / hour;
  var minC = diffValue / minute;
  if (monthC >= 1) {
    if (monthC <= 12) result = "" + parseInt(monthC) + "月前";else {
      result = "" + parseInt(monthC / 12) + "年前";
    }
  } else if (weekC >= 1) {
    result = "" + parseInt(weekC) + "周前";
  } else if (dayC >= 1) {
    result = "" + parseInt(dayC) + "天前";
  } else if (hourC >= 1) {
    result = "" + parseInt(hourC) + "小时前";
  } else if (minC >= 1) {
    result = "" + parseInt(minC) + "分钟前";
  } else {
    result = "刚刚";
  }
  return result;
};

module.exports = {
  formatTime: formatTime,
  getDateDiff: getDateDiff
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWwuanMiXSwibmFtZXMiOlsiZm9ybWF0VGltZSIsImRhdGUiLCJ5ZWFyIiwiZ2V0RnVsbFllYXIiLCJtb250aCIsImdldE1vbnRoIiwiZGF5IiwiZ2V0RGF0ZSIsImhvdXIiLCJnZXRIb3VycyIsIm1pbnV0ZSIsImdldE1pbnV0ZXMiLCJzZWNvbmQiLCJnZXRTZWNvbmRzIiwibWFwIiwiZm9ybWF0TnVtYmVyIiwiam9pbiIsIm4iLCJ0b1N0cmluZyIsImdldERhdGVEaWZmIiwiZGF0ZVRpbWVTdGFtcCIsInJlc3VsdCIsImhhbGZhbW9udGgiLCJub3ciLCJEYXRlIiwiZ2V0VGltZSIsImRpZmZWYWx1ZSIsIm1vbnRoQyIsIndlZWtDIiwiZGF5QyIsImhvdXJDIiwibWluQyIsInBhcnNlSW50IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxTQUFTQSxVQUFULENBQW9CQyxJQUFwQixFQUEwQjtBQUN0QixNQUFJQyxPQUFPRCxLQUFLRSxXQUFMLEVBQVg7QUFDQSxNQUFJQyxRQUFRSCxLQUFLSSxRQUFMLEtBQWtCLENBQTlCO0FBQ0EsTUFBSUMsTUFBTUwsS0FBS00sT0FBTCxFQUFWOztBQUVBLE1BQUlDLE9BQU9QLEtBQUtRLFFBQUwsRUFBWDtBQUNBLE1BQUlDLFNBQVNULEtBQUtVLFVBQUwsRUFBYjtBQUNBLE1BQUlDLFNBQVNYLEtBQUtZLFVBQUwsRUFBYjs7QUFHQSxTQUFPLENBQUNYLElBQUQsRUFBT0UsS0FBUCxFQUFjRSxHQUFkLEVBQW1CUSxHQUFuQixDQUF1QkMsWUFBdkIsRUFBcUNDLElBQXJDLENBQTBDLEdBQTFDLElBQWlELEdBQWpELEdBQXVELENBQUNSLElBQUQsRUFBT0UsTUFBUCxFQUFlRSxNQUFmLEVBQXVCRSxHQUF2QixDQUEyQkMsWUFBM0IsRUFBeUNDLElBQXpDLENBQThDLEdBQTlDLENBQTlEO0FBQ0Q7O0FBRUQsU0FBU0QsWUFBVCxDQUFzQkUsQ0FBdEIsRUFBeUI7QUFDdkJBLE1BQUlBLEVBQUVDLFFBQUYsRUFBSjtBQUNBLFNBQU9ELEVBQUUsQ0FBRixJQUFPQSxDQUFQLEdBQVcsTUFBTUEsQ0FBeEI7QUFDRDs7QUFFRCxTQUFTRSxXQUFULENBQXFCQyxhQUFyQixFQUFvQztBQUNsQyxNQUFJQyxNQUFKO0FBQ0EsTUFBSVgsU0FBUyxPQUFPLEVBQXBCO0FBQ0EsTUFBSUYsT0FBT0UsU0FBUyxFQUFwQjtBQUNBLE1BQUlKLE1BQU1FLE9BQU8sRUFBakI7QUFDQSxNQUFJYyxhQUFhaEIsTUFBTSxFQUF2QjtBQUNBLE1BQUlGLFFBQVFFLE1BQU0sRUFBbEI7QUFDQSxNQUFJaUIsTUFBTSxJQUFJQyxJQUFKLEdBQVdDLE9BQVgsRUFBVjtBQUNBLE1BQUlDLFlBQVlILE1BQU1ILGFBQXRCO0FBQ0EsTUFBSU0sWUFBWSxDQUFoQixFQUFtQjtBQUNqQjtBQUNEO0FBQ0QsTUFBSUMsU0FBU0QsWUFBWXRCLEtBQXpCO0FBQ0EsTUFBSXdCLFFBQVFGLGFBQWEsSUFBSXBCLEdBQWpCLENBQVo7QUFDQSxNQUFJdUIsT0FBT0gsWUFBWXBCLEdBQXZCO0FBQ0EsTUFBSXdCLFFBQVFKLFlBQVlsQixJQUF4QjtBQUNBLE1BQUl1QixPQUFPTCxZQUFZaEIsTUFBdkI7QUFDQSxNQUFJaUIsVUFBVSxDQUFkLEVBQWlCO0FBQ2YsUUFBSUEsVUFBVSxFQUFkLEVBQ0VOLFNBQVMsS0FBS1csU0FBU0wsTUFBVCxDQUFMLEdBQXdCLElBQWpDLENBREYsS0FFSztBQUNITixlQUFTLEtBQUtXLFNBQVNMLFNBQVMsRUFBbEIsQ0FBTCxHQUE2QixJQUF0QztBQUNEO0FBQ0YsR0FORCxNQU9LLElBQUlDLFNBQVMsQ0FBYixFQUFnQjtBQUNuQlAsYUFBUyxLQUFLVyxTQUFTSixLQUFULENBQUwsR0FBdUIsSUFBaEM7QUFDRCxHQUZJLE1BR0EsSUFBSUMsUUFBUSxDQUFaLEVBQWU7QUFDbEJSLGFBQVMsS0FBS1csU0FBU0gsSUFBVCxDQUFMLEdBQXNCLElBQS9CO0FBQ0QsR0FGSSxNQUdBLElBQUlDLFNBQVMsQ0FBYixFQUFnQjtBQUNuQlQsYUFBUyxLQUFLVyxTQUFTRixLQUFULENBQUwsR0FBdUIsS0FBaEM7QUFDRCxHQUZJLE1BR0EsSUFBSUMsUUFBUSxDQUFaLEVBQWU7QUFDbEJWLGFBQVMsS0FBS1csU0FBU0QsSUFBVCxDQUFMLEdBQXNCLEtBQS9CO0FBQ0QsR0FGSSxNQUVFO0FBQ0xWLGFBQVMsSUFBVDtBQUNEO0FBQ0QsU0FBT0EsTUFBUDtBQUNEOztBQUdEWSxPQUFPQyxPQUFQLEdBQWlCO0FBQ2ZsQyxjQUFZQSxVQURHO0FBRWZtQixlQUFhQTtBQUZFLENBQWpCIiwiZmlsZSI6InV0aWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBmb3JtYXRUaW1lKGRhdGUpIHtcclxuICAgIHZhciB5ZWFyID0gZGF0ZS5nZXRGdWxsWWVhcigpXHJcbiAgICB2YXIgbW9udGggPSBkYXRlLmdldE1vbnRoKCkgKyAxXHJcbiAgICB2YXIgZGF5ID0gZGF0ZS5nZXREYXRlKClcclxuICBcclxuICAgIHZhciBob3VyID0gZGF0ZS5nZXRIb3VycygpXHJcbiAgICB2YXIgbWludXRlID0gZGF0ZS5nZXRNaW51dGVzKClcclxuICAgIHZhciBzZWNvbmQgPSBkYXRlLmdldFNlY29uZHMoKVxyXG4gIFxyXG4gIFxyXG4gICAgcmV0dXJuIFt5ZWFyLCBtb250aCwgZGF5XS5tYXAoZm9ybWF0TnVtYmVyKS5qb2luKCcvJykgKyAnICcgKyBbaG91ciwgbWludXRlLCBzZWNvbmRdLm1hcChmb3JtYXROdW1iZXIpLmpvaW4oJzonKVxyXG4gIH1cclxuICBcclxuICBmdW5jdGlvbiBmb3JtYXROdW1iZXIobikge1xyXG4gICAgbiA9IG4udG9TdHJpbmcoKVxyXG4gICAgcmV0dXJuIG5bMV0gPyBuIDogJzAnICsgblxyXG4gIH1cclxuICBcclxuICBmdW5jdGlvbiBnZXREYXRlRGlmZihkYXRlVGltZVN0YW1wKSB7XHJcbiAgICB2YXIgcmVzdWx0O1xyXG4gICAgdmFyIG1pbnV0ZSA9IDEwMDAgKiA2MDtcclxuICAgIHZhciBob3VyID0gbWludXRlICogNjA7XHJcbiAgICB2YXIgZGF5ID0gaG91ciAqIDI0O1xyXG4gICAgdmFyIGhhbGZhbW9udGggPSBkYXkgKiAxNTtcclxuICAgIHZhciBtb250aCA9IGRheSAqIDMwO1xyXG4gICAgdmFyIG5vdyA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xyXG4gICAgdmFyIGRpZmZWYWx1ZSA9IG5vdyAtIGRhdGVUaW1lU3RhbXA7XHJcbiAgICBpZiAoZGlmZlZhbHVlIDwgMCkge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICB2YXIgbW9udGhDID0gZGlmZlZhbHVlIC8gbW9udGg7XHJcbiAgICB2YXIgd2Vla0MgPSBkaWZmVmFsdWUgLyAoNyAqIGRheSk7XHJcbiAgICB2YXIgZGF5QyA9IGRpZmZWYWx1ZSAvIGRheTtcclxuICAgIHZhciBob3VyQyA9IGRpZmZWYWx1ZSAvIGhvdXI7XHJcbiAgICB2YXIgbWluQyA9IGRpZmZWYWx1ZSAvIG1pbnV0ZTtcclxuICAgIGlmIChtb250aEMgPj0gMSkge1xyXG4gICAgICBpZiAobW9udGhDIDw9IDEyKVxyXG4gICAgICAgIHJlc3VsdCA9IFwiXCIgKyBwYXJzZUludChtb250aEMpICsgXCLmnIjliY1cIjtcclxuICAgICAgZWxzZSB7XHJcbiAgICAgICAgcmVzdWx0ID0gXCJcIiArIHBhcnNlSW50KG1vbnRoQyAvIDEyKSArIFwi5bm05YmNXCI7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIGVsc2UgaWYgKHdlZWtDID49IDEpIHtcclxuICAgICAgcmVzdWx0ID0gXCJcIiArIHBhcnNlSW50KHdlZWtDKSArIFwi5ZGo5YmNXCI7XHJcbiAgICB9XHJcbiAgICBlbHNlIGlmIChkYXlDID49IDEpIHtcclxuICAgICAgcmVzdWx0ID0gXCJcIiArIHBhcnNlSW50KGRheUMpICsgXCLlpKnliY1cIjtcclxuICAgIH1cclxuICAgIGVsc2UgaWYgKGhvdXJDID49IDEpIHtcclxuICAgICAgcmVzdWx0ID0gXCJcIiArIHBhcnNlSW50KGhvdXJDKSArIFwi5bCP5pe25YmNXCI7XHJcbiAgICB9XHJcbiAgICBlbHNlIGlmIChtaW5DID49IDEpIHtcclxuICAgICAgcmVzdWx0ID0gXCJcIiArIHBhcnNlSW50KG1pbkMpICsgXCLliIbpkp/liY1cIjtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJlc3VsdCA9IFwi5Yia5YiaXCI7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gcmVzdWx0O1xyXG4gIH07XHJcbiAgXHJcbiAgXHJcbiAgbW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgICBmb3JtYXRUaW1lOiBmb3JtYXRUaW1lLFxyXG4gICAgZ2V0RGF0ZURpZmY6IGdldERhdGVEaWZmXHJcbiAgfVxyXG4gIFxyXG4gIFxyXG4gICJdfQ==