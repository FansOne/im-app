<script>
import wepy from 'wepy';
import { request,vailPhone,toast } from '../../utils/utils.js'
import { uploadImg,userRegister,checkPhone } from '../../api/api.js'

export default class personalRegistration extends wepy.page {
    config = {
        navigationBarTitleText: '个人注册',
        usingComponents: {
            'wxc-icon': '../../packages/@minui/wxc-icon/dist/index'
        },
    };
    components = {};

    data = {
        userId:'',
        tempFilePaths:'', //用户图像
        avatarUrl:'',//用户微信头像
        personalInputData:[
            {
                title:'姓名',
                placeholder:'请输入姓名',
                arrow:false,
                input:'input',
                inputType:'text'
            },
            {
                title:'就职公司',
                placeholder:'请输入公司名称',
                arrow:false,
                input:'input',
                inputType:'text'
            },
            {
                title:'职位',
                placeholder:'请选择',
                arrow:true,
                input:'picker',
                inputType:'selector',
                pickerValue:0,
                pickerRange:['销售','工程师','售后','研发','行政','运营','商务','HR','财务','市场','高管','CEO','其他'],
                selectorPicker:false
            },
            {
                title:'行业',
                placeholder:'请选择',
                arrow:true,
                input:'picker',
                inputType:'selector',
                pickerValue:0,
                pickerRange:['贸易','制造业','房地产','保健品','IT/互联网','通信/电子','汽车/配件','生物/环保','医疗/器械','金融/投资','能源/电力','建筑/建材','化工/纺织','零售/快消','教育/科研','广告/传媒','企业咨询'],
                index:8,
                selectorPicker:false
            },
            {
                title:'地区',
                placeholder:'请选择',
                arrow:true,
                input:'picker',
                inputType:'region',
                pickerValue:[],
                index:3
            },
        ],
        iconColor:'#9999',
        phoneValue:'',
        phoneNumberValue:'',
        customIndex: [0, 0, 0], //当前产品选中数组的下标值
        //当前选中数组
        onlyArray: [
            [],
            [],
            []
        ],
        checkInputStatus:false,
        checkPhoneValue:null
    };
    methods = {
        // 控制手机号显示隐藏
        controlPhoneNum(){
            if(vailPhone(this.phoneNumberValue)){
                if(this.iconColor == '#9999'){
                    this.iconColor = '#00D4D7'
                    this.phoneValue = this.phoneNumberValue.substring(0, 3) + '****' + this.phoneNumberValue.substring(7);
                }else{
                    this.iconColor = '#9999'
                    this.phoneValue = this.phoneNumberValue
                }
            }else{
                toast('请输入正确的手机号')
            }
        },
        // 职位选择
        pickerChange2(e){
            if(e.detail.value<4){ //插入领域
                let field = {
                    title:'领域',
                    placeholder:'请选择',
                    arrow:true,
                    input:'picker',
                    inputType:'selector',
                    pickerValue:0,
                    pickerRange:['渠道','区域','财税','教育','政府','制造','金融','公检法','企业','交通','医疗','烟草','能源','外企','游戏','广电','军工','气象','互联网','运营商','智慧城市','其他'],
                    index:7,
                    selectorPicker:false
                };
                let industry = {
                    title:'产品',
                    placeholder:'请选择',
                    arrow:true,
                    input:'picker',
                    inputType:'multiSelector',
                    pickerValue:this.customIndex,
                    pickerRange:this.onlyArray,
                    index:9
                };
                let joinSwitch = false;
                let positionSelect = false;
                let selectIT = false;
                let itProduct = false
                this.personalInputData.forEach(element => {
                    if(element.title == '领域'){
                        joinSwitch = true
                    }

                    if(element.title == '职位'){
                        if(element.pickerValue == 0 ||element.pickerValue == 1 ||element.pickerValue == 2 ||element.pickerValue == 3){
                            positionSelect = true
                        }
                    }
                    if(element.title == '产品'){
                        itProduct = true
                    }
                    if(element.title == '行业'){
                        if(element.pickerValue == 4) selectIT =true
                    }
                });
                if(joinSwitch){
                    // return
                }else{
                    this.personalInputData.splice(3, 0, field); //插入领域
                    if(selectIT && positionSelect & !itProduct){ //插入互联网产品
                        this.personalInputData.splice(5, 0, industry);
                    }
                }
            }else{
                let hiddenSwitch = false;
                let productHave = false;
                let productIndex = 4;
                this.personalInputData.forEach((element,index) => {
                    if(element.title == '领域'){
                        hiddenSwitch = true
                    }
                    // 产品显示控制
                    if(element.title == '产品'){
                        productHave = true
                        productIndex = index-1
                    }
                });
                if(hiddenSwitch){
                    this.personalInputData.splice(3, 1);
                }
                if(productHave){
                    this.personalInputData.splice(productIndex, 1);
                }
            }
            this.personalInputData[2].selectorPicker = true
            this.personalInputData[2].pickerValue = e.detail.value
        },
        // 领域选择
        pickerChange7(e){
            this.personalInputData[3].pickerValue = e.detail.value
            this.personalInputData[3].selectorPicker = true
        },
        // 行业选择
        pickerChange8(e){
            let dataIndex = 3;
            let positionSelect = false;
            this.personalInputData.forEach(element => {
                if(element.title == '领域'){
                    dataIndex = 4
                }
                if(element.title == '职位'){
                    if(element.selectorPicker){
                        if(element.pickerValue == 0 ||element.pickerValue == 1 ||element.pickerValue == 2 ||element.pickerValue == 3){
                            positionSelect = true
                        }
                    }
                }
            });
            if(e.detail.value == 4 && positionSelect){ //行业选择IT互联网
                let industry = {
                    title:'产品',
                    placeholder:'请选择',
                    arrow:true,
                    input:'picker',
                    inputType:'multiSelector',
                    pickerValue:this.customIndex,
                    pickerRange:this.onlyArray,
                    index:9
                };
                let industryHave = false;
                this.personalInputData.forEach(element => {
                    if(element.title == '产品'){
                        industryHave = true
                    }
                });
                if(!industryHave){
                    this.personalInputData.splice(this.personalInputData.length-1, 0, industry);
                }
            }else{
                let spliceItem = false;
                let spliceIndex = 5;
                this.personalInputData.forEach(element => {
                    if(element.title == '产品'){
                        spliceIndex = 4
                        this.personalInputData.forEach(ele=>{
                            if(ele.title == '领域'){
                                spliceIndex = 5
                            }
                        })
                        spliceItem = true
                    }
                });
                if(spliceItem){
                    this.personalInputData.splice(spliceIndex, 1);
                }
            }
            this.personalInputData[dataIndex].pickerValue = e.detail.value
            this.personalInputData[dataIndex].selectorPicker = true
        },
        // 产品滑动选择
        columnchange9(e){
            // console.log('修改的列为', e.detail.column, '，值为', e.detail.value);
            let customArray = require('../../utils/listData.js').data,
                customIndex = this.customIndex,
                onlyArray = this.onlyArray;
            
            customIndex[e.detail.column] = e.detail.value;

            let searchColumn = () => {
                for (var i = 0; i < customArray.length; i++) {
                    var arr1 = [];
                    var arr2 = [];
                    if (i == customIndex[0]) {
                    for (var j = 0; j < customArray[i].goods_category_two.length; j++) {
                        arr1.push(customArray[i].goods_category_two[j].goods_category_two_name);
                        if (j == customIndex[1]) {
                        for (var k = 0; k < customArray[i].goods_category_two[j].goods.length; k++) {
                            arr2.push(customArray[i].goods_category_two[j].goods[k].goods_name);
                        }
                        onlyArray[2] = arr2;
                        }
                    }
                    onlyArray[1] = arr1;
                    }
                };
            }

            switch (e.detail.column) {
                case 0:
                    customIndex[1] = 0;
                    customIndex[2] = 0;
                    searchColumn();
                    break;
                case 1:
                    customIndex[2] = 0;
                    searchColumn();
                break;
            }
            this.onlyArray = onlyArray
            this.customIndex = customIndex
            this.$apply()
        },
        // 产品选择
        pickerChange9(e){
            // console.log(e.detail.value)
        },
        // 地区选择器
        pickerChange3(e){
            this.personalInputData[this.personalInputData.length-1].pickerValue = e.detail.value
        },
        // 上传图像
        chooseImage(){
            wx.chooseImage({
                count: 1,
                sizeType: ['original', 'compressed'],
                sourceType: ['album', 'camera'],
                success: (res)=> {
                    this.tempFilePaths = res.tempFilePaths[0]
                    this.$apply()
                    wx.uploadFile({
                        url:uploadImg,
                        filePath: res.tempFilePaths[0],
                        header:{
                            'Content-Type':'application/x-www-form-urlencoded'                           
                        },
                        name: 'file',
                        success:  (res)=> {
                            this.tempFilePaths = res.data
                            this.$apply()
                        }
                    })
                }
            })
        },
        // 手机号输入监听
        phoneInput(e){
            this.phoneNumberValue = e.detail.value
            if(e.detail.value.length == 11){
                wx.showModal({
                    title: '验证提示',
                    content: '我们将发送短信验证码至当前所填写的手机中,注意查收',
                    showCancel: true,
                    cancelText: '取消',
                    cancelColor: '#000000',
                    confirmText: '确定',
                    confirmColor: '#3CC51F',
                    success: (result) => {
                        if (result.confirm) {
                            request(checkPhone,"POST",{mobile:this.phoneNumberValue,event:'register'}).then(res=>{
                                toast(res.data.msg)
                                if(res.data.code == 1){
                                    this.checkInputStatus = true
                                    this.$apply()
                                }
                            })
                        }
                    }
                });
                  
            }
        },
        // 提交表单
        formSubmit(e){
            let formValue = e.detail.value;
            let dataComplete = true
            Object.keys(formValue).forEach(function(key){
                if(formValue[key] == ''){
                    dataComplete = false
                };
            });
            if(dataComplete){
                let data = {
                    userId:this.userId, // 用户ID
                    name:formValue.input0, // 姓名
                    company:formValue.input1, //公司
                    phoneNum:formValue.phoneNum, // 电话
                    sms:formValue.sms,//短信验证码
                    phoneNumHidden:this.iconColor=='#9999'?0:1, //电话显示隐藏
                    position:this.personalInputData[2].pickerRange[formValue.picker2], //职位
                    /**
                     * 领域、行业、产品、地区 为变值
                    */
                };
                if(this.tempFilePaths) data.avatarurl = this.tempFilePaths //用户上传的图像
                // field industry product address
                let fieldHave = false
                this.personalInputData.forEach((element,index) => {
                    if(element.title == '产品'){
                        data.industry = this.personalInputData[4].pickerRange[formValue.picker4]
                        data.product = this.personalInputData[5].pickerRange[0][this.personalInputData[5].pickerValue[0]]+','+this.personalInputData[5].pickerRange[1][this.personalInputData[5].pickerValue[1]]+','+this.personalInputData[5].pickerRange[2][this.personalInputData[5].pickerValue[2]]
                        data.field = this.personalInputData[3].pickerRange[formValue.picker3]
                        data.address = this.personalInputData[6].pickerValue[0]+','+this.personalInputData[6].pickerValue[1]+','+this.personalInputData[6].pickerValue[2]
                    }else if(element.title == '领域'){
                        fieldHave = true
                        data.industry = this.personalInputData[4].pickerRange[formValue.picker4]
                        data.field = this.personalInputData[3].pickerRange[formValue.picker3]
                        data.address = this.personalInputData[5].pickerValue[0]+','+this.personalInputData[5].pickerValue[1]+','+this.personalInputData[5].pickerValue[2]
                    }
                });
                if(!fieldHave){
                    data.industry = this.personalInputData[3].pickerRange[formValue.picker3]
                    data.address = this.personalInputData[4].pickerValue[0]+','+this.personalInputData[4].pickerValue[1]+','+this.personalInputData[4].pickerValue[2]
                }
                request(userRegister,'POST',data).then(res=>{
                    if(res.data.data == 1){
                        let loginData = wx.getStorageSync('loginData');
                        loginData.find = 1
                        wx.setStorage({
                            key: 'loginData',
                            data: loginData,
                            success: (result) => {
                                wx.showToast({
                                    title: '注册成功',
                                    icon: 'success',
                                    duration: 1000,
                                    success: (result) => {
                                        setTimeout(() => {
                                            wx.reLaunch({
                                                url: '../../pages/index'
                                            })
                                        }, 1000);
                                    }
                                });
                            }
                        })
                    }else{
                        if(res.data.msg = '验证码不正确') this.checkPhoneValue = ''
                        console.log(res.data)
                        toast(res.data.msg || '服务器数据异常')
                        this.$apply()
                    }
                }).catch(()=>{ toast('服务器数据异常') })
            }
        }
    };

    events = {};
    onLoad(options) {
        console.log(options.userId)
        this.userId = options.userId
        this.avatarUrl = options.avatarUrl
        let productList = require('../../utils/listData.js').data;
        // console.log(productList)
        productList.forEach(element => {
            this.onlyArray[0].push(element.goods_category_one_name)
        });
        productList[0].goods_category_two.forEach(element => {
            this.onlyArray[1].push(element.goods_category_two_name)
        });
        productList[0].goods_category_two[0].goods.forEach(element => {
            this.onlyArray[2].push(element.goods_name)
        });
        this.$apply()
    };
}
</script>

<template lang="wxml">
    <view class="list-warp">
        <view class="personalCoverBox">
            <image src="{{tempFilePaths?tempFilePaths:avatarUrl}}" class="userCover" @tap="chooseImage" mode="aspectFill">
                <image src="../../image/personalCameraUpdata.png"/>
            </image>
        </view>
        <form bindsubmit="formSubmit">

            <view class="personalInputItemBox" wx:for="{{personalInputData}}" wx:key=''>
                <view class="inputItem">
                    <view class="inputTitle"><text>*</text> {{item.title}}</view>
                    <input wx:if="{{item.input == 'input'}}" placeholder="{{item.placeholder}}" placeholder-style="color:#999;font-size:28rpx" name='input{{index}}' type="{{item.inputType}}"/>
                    <picker wx:if="{{item.input == 'picker'}}" mode="{{item.inputType}}" @change="pickerChange{{item.index?item.index:index}}" @columnchange="columnchange{{item.index?item.index:index}}" value="{{item.pickerValue}}" range="{{item.pickerRange}}" name='picker{{index}}'>
                        <!-- 地区选择器展示内容 -->
                        <view class="picker" wx:if="{{item.inputType == 'region'}}" style="font-size:28rpx;{{item.pickerValue.length?'':'color:#999'}}">
                            {{item.pickerValue.length?(item.pickerValue[0]+' · '+item.pickerValue[1]+' · '+item.pickerValue[2]):item.placeholder}}
                        </view>
                        <!-- 多列选择器展示内容 -->
                        <view class="picker" wx:elif="{{item.inputType == 'multiSelector'}}" style="font-size:28rpx;{{item.pickerValue.length?'':'color:#999'}}">
                            {{item.pickerValue.length?(item.pickerRange[0][item.pickerValue[0]]+'-'+item.pickerRange[1][item.pickerValue[1]]+'-'+item.pickerRange[2][item.pickerValue[2]]):item.placeholder}}
                        </view>
                        <!-- 普通选择器 -->
                        <view class="picker" wx:if="{{item.inputType == 'selector'}}" style="font-size:28rpx;{{item.selectorPicker?'':'color:#999'}}">
                            {{item.selectorPicker?(item.pickerRange[item.pickerValue]):item.placeholder}}
                        </view>
                        <!-- 日期选择 -->
                        <view class="picker" wx:if="{{item.inputType == 'date'}}" style="font-size:28rpx;{{selectData?'':'color:#999'}}">
                            {{selectData?item.pickerValue:item.placeholder}}
                        </view>
                    </picker>
                    <wxc-icon wx:if='{{item.arrow}}' size="25" type="arrow-right" color='#999'/>
                </view>
                <textarea wx:if="{{item.input == 'textarea'}}" placeholder="{{item.placeholder}}" placeholder-style="font-size:26rpx;color#c3c3c3" @confirm = 'bindconfirm' name='textarea{{index}}' style="height:{{item.height?item.height:''}}rpx"/>
            </view>
            <!-- 手机号 -->
            <view class='userPhoneNumBox'>
                <view class="inputTitle"><text>*</text>手机号</view>
                <view class="phoneNumInputBox">
                    <input placeholder="请输入手机号" maxlength="11" placeholder-style="color:#999;font-size:28rpx" value="{{phoneValue}}" name='phoneNum' type="number" @input='phoneInput'/>
                    <view class="controlIcon" @tap='controlPhoneNum'>
                        <icon type="success" size="15" color="{{iconColor}}"/>
                        <view>隐藏号码</view>
                    </view>
                    <input wx:if='{{checkInputStatus}}' placeholder="输入验证码" class="smsInput" maxlength="4" placeholder-style="color:#999;font-size:26rpx;" type="number" name='sms' value="{{checkPhoneValue}}"/>
                </view>
                </view>
            </view>
            <!-- 保存按钮 -->
            <view class="btnsBox personalMsgBtnBox" style="margin-top:80rpx;">
                <button form-type="submit">保存</button>
            </view>
        </form>
    </view>
</template>

<style lang="less">
    .personalMsgBtnBox{
        button{
            width: 590rpx !important;
            background-color: #00D4D7 !important;
        }
    }
    .userPhoneNumBox{
        width: 100%;
        padding: 25rpx 30rpx 10rpx 30rpx;
        border-bottom: 1rpx solid #ebebeb;
        .inputTitle{
            font-size: 28rpx;
            text{
                margin-right: 6rpx;
                display: inline-block;
                color: red;
            }
        }
        .phoneNumInputBox{
            position: relative;
            margin-top: 8rpx;
            display: flex;
            align-items: center;
            justify-content: space-between;
            input{
                text-align: left;
            }
            .controlIcon{
                display: flex;
                align-items: center;
                view{
                    font-size: 28rpx;
                    color: #999;
                    margin-left: 10rpx;
                }
            }
        }
    }
    .smsInput{
        box-sizing: border-box;
        padding-left:10rpx;
        position: absolute;
        left: 320rpx;
        width: 189rpx;
        text-align: left !important;
        border: 1rpx solid #f1f1f1;
    }
</style>