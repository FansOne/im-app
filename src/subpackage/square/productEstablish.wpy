<script>
import wepy from 'wepy';

export default class productEstablish extends wepy.page {
    config = {
        navigationBarTitleText: '创建产品',
        usingComponents: {
            'wxc-icon': '../../packages/@minui/wxc-icon/dist/index'
        },
    };
    components = {};

    data = {
        personalInputData:[
            {
                title:'名称',
                placeholder:'请输入名称',
                arrow:false,
                input:'input',
                inputType:'text'
            },
            {
                title:'行业',
                placeholder:'请选择',
                arrow:true,
                input:'picker',
                inputType:'selector',
                pickerValue:0,
                pickerRange:['贸易','制造业','房地产','保健品','IT/互联网','通信/电子','汽车/配件','生物/环保','医疗/器械','金融/投资','能源/电力','建筑/建材','化工/纺织','零售/快消','教育/科研','广告/传媒','企业咨询'],
                index:1,
                selectorPicker:false
            },
            {
                title:'详情',
                placeholder:'点击录入产品详情',
                arrow:true,
                input:'picker',
                inputType:'otherPage',
                selectorPicker:false
            },
            {
                title:'联系人',
                placeholder:'请输入联系人姓名',
                arrow:false,
                input:'input',
                inputType:'text'
            },
            {
                title:'联系方式',
                placeholder:'请输入电话号码',
                arrow:false,
                input:'input',
                inputType:'number'
            }
        ],
        customIndex: [0, 0, 0], //当前产品选中数组的下标值
        //当前选中数组
        onlyArray: [
            [],
            [],
            []
        ]
    };
    methods = {
        // 行业
        pickerChange1(e){
            let industry = {
                title:'产品',
                placeholder:'请选择',
                arrow:true,
                input:'picker',
                inputType:'multiSelector',
                pickerValue:this.customIndex,
                pickerRange:this.onlyArray,
                index:2
            };
            let productHave = false;
            if(e.detail.value == 4){
                this.personalInputData.forEach(element => {
                    if(element.title == '产品') productHave = true
                });
                if(!productHave){
                    this.personalInputData.splice(2, 0, industry);
                }
            }else{
                let deleteProduct = false;
                this.personalInputData.forEach(element => {
                    if(element.title == '产品') deleteProduct = true
                });
                if(deleteProduct) this.personalInputData.splice(2, 1);
            }
            this.personalInputData[1].selectorPicker = true
            this.personalInputData[1].pickerValue = e.detail.value
        },
        // 产品滑动选择
        columnchange2(e){
            let customArray = require('../../utils/listData.js').data,
                customIndex = this.customIndex,
                onlyArray = this.onlyArray;
            
            customIndex[e.detail.column] = e.detail.value;

            let searchColumn = () => {
                for (var i = 0; i < customArray.length; i++) {
                    var arr1 = [];
                    var arr2 = [];
                    if (i == customIndex[0]) {
                    for (var j = 0; j < customArray[i].goods_category_two.length; j++) {
                        arr1.push(customArray[i].goods_category_two[j].goods_category_two_name);
                        if (j == customIndex[1]) {
                        for (var k = 0; k < customArray[i].goods_category_two[j].goods.length; k++) {
                            arr2.push(customArray[i].goods_category_two[j].goods[k].goods_name);
                        }
                        onlyArray[2] = arr2;
                        }
                    }
                    onlyArray[1] = arr1;
                    }
                };
            }

            switch (e.detail.column) {
                case 0:
                    customIndex[1] = 0;
                    customIndex[2] = 0;
                    searchColumn();
                    break;
                case 1:
                    customIndex[2] = 0;
                    searchColumn();
                break;
            }
            this.onlyArray = onlyArray
            this.customIndex = customIndex
            this.$apply()
        },
        // 产品选择
        pickerChange2(e){
            // console.log(e.detail.value)
        },
        // 编辑产品详情
        editorPage(){
            wx.navigateTo({
                url: `../editorRichText/editor?title=编辑产品详情`
            })
        }
    };

    events = {};
    onLoad() {
        let productList = require('../../utils/listData.js').data;
        // console.log(productList)
        productList.forEach(element => {
            this.onlyArray[0].push(element.goods_category_one_name)
        });
        productList[0].goods_category_two.forEach(element => {
            this.onlyArray[1].push(element.goods_category_two_name)
        });
        productList[0].goods_category_two[0].goods.forEach(element => {
            this.onlyArray[2].push(element.goods_name)
        });
        this.$apply()
    };
}
</script>

<template lang="wxml">
    <view class="list-warp">
        <form bindsubmit="formSubmit">

            <view class="personalInputItemBox" wx:for="{{personalInputData}}" wx:key=''>
                <view class="inputItem">
                    <view class="inputTitle"><text>*</text> {{item.title}}</view>
                    <input wx:if="{{item.input == 'input'}}" placeholder="{{item.placeholder}}" placeholder-style="color:#999;font-size:28rpx" name='input{{index}}' type="{{item.inputType}}"/>
                    <picker wx:if="{{item.input == 'picker'}}" mode="{{item.inputType}}" @change="pickerChange{{item.index?item.index:index}}" @columnchange="columnchange{{item.index?item.index:index}}" value="{{item.pickerValue}}" range="{{item.pickerRange}}" name='picker{{index}}'>
                        <!-- 多列选择器展示内容 -->
                        <view class="picker" wx:if="{{item.inputType == 'multiSelector'}}" style="font-size:28rpx;{{item.pickerValue.length?'':'color:#999'}}">
                            {{item.pickerValue.length?(item.pickerRange[0][item.pickerValue[0]]+'-'+item.pickerRange[1][item.pickerValue[1]]+'-'+item.pickerRange[2][item.pickerValue[2]]):item.placeholder}}
                        </view>
                        <!-- 普通选择器 -->
                        <view class="picker" wx:if="{{item.inputType == 'selector'}}" style="font-size:28rpx;{{item.selectorPicker?'':'color:#999'}}">
                            {{item.selectorPicker?(item.pickerRange[item.pickerValue]):item.placeholder}}
                        </view>
                        <!-- 编辑文章‘富文本’ -->
                        <view class="picker" wx:if="{{item.inputType == 'otherPage'}}" style="font-size:28rpx;{{item.selectorPicker?'':'color:#999'}}" @tap='editorPage'>
                            {{item.placeholder}}
                        </view>
                    </picker>
                    <wxc-icon wx:if='{{item.arrow}}' size="25" type="arrow-right" color='#999'/>
                </view>
            </view>
            <!-- 按钮组 -->
            <view class="demandBtnsBox" style="padding-top:100rpx;">
                <view>保存</view>
                <view>保存并发布至广场</view>
            </view>
        </form>
    </view>
</template>

<style lang="less">
/** less **/
</style>